name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_LATEST: '3.10'

jobs:
  tests:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.8', '3.9', '3.10' ]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -m pip install build twine

      - name: Lint
        run: |
          # stop the build if there are Python syntax errors or undefined names.
          flake8 myver/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings.
          flake8 myver/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Build package
        run: python -m build

      - name: Verify build
        run: twine check dist/*

      - name: Test
        run: |
          coverage run --source=myver/ -m pytest -v -rfEs tests/
          coverage report

      - name: Post coverage results
        if: matrix.python-version == env.PYTHON_LATEST
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pip install coveralls
          coveralls --service=github
